{"ast":null,"code":"var _jsxFileName = \"/Users/alena/Documents/GitHub/goit-react-hw-04-hooks-phonebook/src/App.js\";\nimport { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContatctList';\nimport FilterContact from './components/FilterContact';\nimport Section from './components/Section';\nimport Container from './components/Container';\nimport shortid from 'shortid';\nimport 'modern-normalize/modern-normalize.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filter: '',\n      contacts: []\n    };\n\n    this.takeCurrentValue = e => {\n      const {\n        value\n      } = e.currentTarget;\n      this.setState({\n        filter: value\n      });\n    };\n\n    this.getFilterContact = () => {\n      const {\n        contacts,\n        filter\n      } = this.state;\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(({\n        name\n      }) => name.toLowerCase().includes(normalizedFilter));\n    };\n\n    this.handleSubmitForm = ({\n      name,\n      number\n    }) => {\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number\n      };\n\n      if (this.state.contacts.find(({\n        name\n      }) => name === contact.name)) {\n        alert(`${contact.name} is already in contacts`);\n        return;\n      }\n\n      this.setState(({\n        contacts\n      }) => ({\n        contacts: [...contacts, contact]\n      }));\n    };\n\n    this.onDeleteContact = contactId => {\n      this.setState(({\n        contacts\n      }) => ({\n        contacts: contacts.filter(contact => contact.id !== contactId)\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const contact = localStorage.getItem('contact');\n    const parseContact = JSON.parse(contact);\n\n    if (parseContact) {\n      this.setState({\n        contacts: parseContact\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      contacts\n    } = this.state;\n\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contact', JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    const {\n      filter\n    } = this.state;\n    const filtered = this.getFilterContact();\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Phonebook\",\n        children: /*#__PURE__*/_jsxDEV(ContactForm, {\n          handleSubmitForm: this.handleSubmitForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Contacts\",\n        children: [/*#__PURE__*/_jsxDEV(FilterContact, {\n          value: this.takeCurrentValue,\n          filter: filter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n          onDeleteContact: this.onDeleteContact,\n          list: filtered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alena/Documents/GitHub/goit-react-hw-04-hooks-phonebook/src/App.js"],"names":["Component","ContactForm","ContactList","FilterContact","Section","Container","shortid","App","state","filter","contacts","takeCurrentValue","e","value","currentTarget","setState","getFilterContact","normalizedFilter","toLowerCase","name","includes","handleSubmitForm","number","contact","id","generate","find","alert","onDeleteContact","contactId","componentDidMount","localStorage","getItem","parseContact","JSON","parse","componentDidUpdate","prevProps","prevState","setItem","stringify","render","filtered"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContatctList';\nimport FilterContact from './components/FilterContact';\nimport Section from './components/Section';\nimport Container from './components/Container';\nimport shortid from 'shortid';\nimport 'modern-normalize/modern-normalize.css';\nclass App extends Component {\n  state = {\n    filter: '',\n    contacts: [],\n  };\n  componentDidMount() {\n    const contact = localStorage.getItem('contact');\n    const parseContact = JSON.parse(contact);\n    if (parseContact) {\n      this.setState({ contacts: parseContact });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contact', JSON.stringify(contacts));\n    }\n  }\n  takeCurrentValue = e => {\n    const { value } = e.currentTarget;\n    this.setState({ filter: value });\n  };\n  getFilterContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  handleSubmitForm = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (this.state.contacts.find(({ name }) => name === contact.name)) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n    this.setState(({ contacts }) => ({ contacts: [...contacts, contact] }));\n  };\n\n  onDeleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filtered = this.getFilterContact();\n\n    return (\n      <Container className=\"App\">\n        <Section title=\"Phonebook\">\n          <ContactForm handleSubmitForm={this.handleSubmitForm} />\n        </Section>\n        <Section title=\"Contacts\">\n          <FilterContact value={this.takeCurrentValue} filter={filter} />\n          <ContactList onDeleteContact={this.onDeleteContact} list={filtered} />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}