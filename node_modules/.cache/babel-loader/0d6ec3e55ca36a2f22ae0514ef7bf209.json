{"ast":null,"code":"var _jsxFileName = \"/Users/alena/Documents/GitHub/goit-react-hw-04-hooks-phonebook/src/components/ContactForm/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport s from './ContactForm.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default ContactForm = _s(({\n  handleSubmitForm\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const value = e.currentTarget.name;\n\n    switch (value) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n\n      default:\n        throw new Error();\n    }\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    handleSubmitForm(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: s.form,\n    onSubmit: onSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: s.form__input,\n        onChange: handleChange,\n        value: name,\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"\\u0418\\u043C\\u044F \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u0438\\u0437 \\u0431\\u0443\\u043A\\u0432, \\u0430\\u043F\\u043E\\u0441\\u0442\\u0440\\u043E\\u0444\\u0430, \\u0442\\u0438\\u0440\\u0435 \\u0438 \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u043E\\u0432. \\u041D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \\u0438 \\u0442. \\u043F.\",\n        required: true,\n        placeholder: \"Ivan Ivanov\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: s.form__input,\n        onChange: handleChange,\n        value: number,\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u0442\\u044C \\u0446\\u0438\\u0444\\u0440 \\u0438 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0431\\u0435\\u043B\\u044B, \\u0442\\u0438\\u0440\\u0435, \\u043A\\u0440\\u0443\\u0433\\u043B\\u044B\\u0435 \\u0441\\u043A\\u043E\\u0431\\u043A\\u0438 \\u0438 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u043D\\u0430\\u0447\\u0438\\u043D\\u0430\\u0442\\u044C\\u0441\\u044F \\u0441 +\",\n        required: true,\n        placeholder: \"+38 (099) 999-99-99\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.btn,\n      children: \"add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}, \"mgYk2feJE7Nd8w88JvjzPww6GtA=\"); // class ContactForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n//   handleChange = e => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({ [name]: value });\n//   };\n//   onSubmitForm = e => {\n//     e.preventDefault();\n//     console.log(this.state);\n//     this.props.handleSubmitForm(this.state);\n//     this.reset();\n//   };\n//   reset = () => {\n//     this.setState({ name: '', number: '' });\n//   };\n//   render() {\n//     const { name, number } = this.state;\n//     return (\n//       <form className={s.form} onSubmit={this.onSubmitForm}>\n//         <label>\n//           Name\n//           <input\n//             className={s.form__input}\n//             onChange={this.handleChange}\n//             value={name}\n//             type=\"text\"\n//             name=\"name\"\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//             required\n//             placeholder=\"Ivan Ivanov\"\n//           />\n//         </label>\n//         <label>\n//           Number\n//           <input\n//             className={s.form__input}\n//             onChange={this.handleChange}\n//             value={number}\n//             type=\"tel\"\n//             name=\"number\"\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//             required\n//             placeholder=\"+38 (099) 999-99-99\"\n//           />\n//         </label>\n//         <button className={s.btn}>add contact</button>\n//       </form>\n//     );\n//   }\n// }\n// ContactForm.propTypes = {\n//   handleSubmitForm: PropTypes.func.isRequired,\n// };\n// export default ContactForm;","map":{"version":3,"sources":["/Users/alena/Documents/GitHub/goit-react-hw-04-hooks-phonebook/src/components/ContactForm/ContactForm.js"],"names":["PropTypes","Component","s","ContactForm","handleSubmitForm","name","setName","useState","number","setNumber","handleChange","e","value","currentTarget","Error","onSubmitForm","preventDefault","reset","form","form__input","btn"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,CAAP,MAAc,2BAAd;;AAEA,eAAeC,WAAW,MAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AAAA;;AACrD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBF,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAMC,KAAK,GAAGD,CAAC,CAACE,aAAF,CAAgBR,IAA9B;;AACA,YAAQO,KAAR;AACE,WAAK,MAAL;AACEN,QAAAA,OAAO,CAACK,CAAC,CAACE,aAAF,CAAgBD,KAAjB,CAAP;AACA;;AAEF,WAAK,QAAL;AACEH,QAAAA,SAAS,CAACE,CAAC,CAACE,aAAF,CAAgBD,KAAjB,CAAT;AACA;;AAEF;AACE,cAAM,IAAIE,KAAJ,EAAN;AAVJ;AAYD,GAdD;;AAeA,QAAMC,YAAY,GAAGJ,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAZ,IAAAA,gBAAgB,CAACC,IAAD,EAAOG,MAAP,CAAhB;AACAS,IAAAA,KAAK;AACN,GAJD;;AAKA,QAAMA,KAAK,GAAG,MAAM;AAClBX,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAG,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAHD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAEP,CAAC,CAACgB,IAAnB;AAAyB,IAAA,QAAQ,EAAEH,YAAnC;AAAA,4BACE;AAAA,sCAEE;AACE,QAAA,SAAS,EAAEb,CAAC,CAACiB,WADf;AAEE,QAAA,QAAQ,EAAET,YAFZ;AAGE,QAAA,KAAK,EAAEL,IAHT;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,OAAO,EAAC,wHANV;AAOE,QAAA,KAAK,EAAC,icAPR;AAQE,QAAA,QAAQ,MARV;AASE,QAAA,WAAW,EAAC;AATd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAeE;AAAA,wCAEE;AACE,QAAA,SAAS,EAAEH,CAAC,CAACiB,WADf;AAEE,QAAA,QAAQ,EAAET,YAFZ;AAGE,QAAA,KAAK,EAAEF,MAHT;AAIE,QAAA,IAAI,EAAC,KAJP;AAKE,QAAA,IAAI,EAAC,QALP;AAME,QAAA,OAAO,EAAC,wFANV;AAOE,QAAA,KAAK,EAAC,+hBAPR;AAQE,QAAA,QAAQ,MARV;AASE,QAAA,WAAW,EAAC;AATd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eA6BE;AAAQ,MAAA,SAAS,EAAEN,CAAC,CAACkB,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CA7DyB,iCAA1B,C,CA+DA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport s from './ContactForm.module.scss';\n\nexport default ContactForm = ({ handleSubmitForm }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const value = e.currentTarget.name;\n    switch (value) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n\n      default:\n        throw new Error();\n    }\n  };\n  const onSubmitForm = e => {\n    e.preventDefault();\n    handleSubmitForm(name, number);\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={s.form} onSubmit={onSubmitForm}>\n      <label>\n        Name\n        <input\n          className={s.form__input}\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Ivan Ivanov\"\n        />\n      </label>\n      <label>\n        Number\n        <input\n          className={s.form__input}\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"+38 (099) 999-99-99\"\n        />\n      </label>\n      <button className={s.btn}>add contact</button>\n    </form>\n  );\n};\n\n// class ContactForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   handleChange = e => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({ [name]: value });\n//   };\n//   onSubmitForm = e => {\n//     e.preventDefault();\n//     console.log(this.state);\n//     this.props.handleSubmitForm(this.state);\n//     this.reset();\n//   };\n//   reset = () => {\n//     this.setState({ name: '', number: '' });\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n//     return (\n//       <form className={s.form} onSubmit={this.onSubmitForm}>\n//         <label>\n//           Name\n//           <input\n//             className={s.form__input}\n//             onChange={this.handleChange}\n//             value={name}\n//             type=\"text\"\n//             name=\"name\"\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//             required\n//             placeholder=\"Ivan Ivanov\"\n//           />\n//         </label>\n//         <label>\n//           Number\n//           <input\n//             className={s.form__input}\n//             onChange={this.handleChange}\n//             value={number}\n//             type=\"tel\"\n//             name=\"number\"\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//             required\n//             placeholder=\"+38 (099) 999-99-99\"\n//           />\n//         </label>\n//         <button className={s.btn}>add contact</button>\n//       </form>\n//     );\n//   }\n// }\n\n// ContactForm.propTypes = {\n//   handleSubmitForm: PropTypes.func.isRequired,\n// };\n\n// export default ContactForm;\n"]},"metadata":{},"sourceType":"module"}