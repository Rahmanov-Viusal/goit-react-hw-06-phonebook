{"ast":null,"code":"var _jsxFileName = \"/Users/alena/Documents/GitHub/goit-react-hw-06-phonebook/src/components/ContatctList/ContactList.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.scss\";\nimport { useSelector } from \"react-redux\";\nimport { deleteContact } from \"../../redux/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  // if (list.length === 0) return null;\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items); // const filter = useSelector(state => state.contacts.filter);\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: s.filterList,\n    children: contacts.map(({\n      id,\n      number,\n      name\n    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: s.filterListItem,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: s.text,\n        children: [name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.span,\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.btn,\n        onClick: dispatch(deleteContact(id)),\n        type: \"button\",\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"sydSEEMVkiloeUptxkxmL6nxG7A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Contacts;\nContacts.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired))\n};\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/Users/alena/Documents/GitHub/goit-react-hw-06-phonebook/src/components/ContatctList/ContactList.js"],"names":["PropTypes","s","useSelector","deleteContact","useDispatch","Contacts","dispatch","contacts","state","items","filterList","map","id","number","name","filterListItem","text","span","btn","propTypes","onDeleteContact","func","isRequired","list","arrayOf","objectOf","string"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,2BAAd;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AAEA,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAMG,QAAQ,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeE,KAAzB,CAA5B,CAJqB,CAKrB;;AACA,sBACE;AAAI,IAAA,SAAS,EAAER,CAAC,CAACS,UAAjB;AAAA,cACGH,QAAQ,CAACI,GAAT,CAAa,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,MAAN;AAAcC,MAAAA;AAAd,KAAD,kBACZ;AAAI,MAAA,SAAS,EAAEb,CAAC,CAACc,cAAjB;AAAA,8BACE;AAAG,QAAA,SAAS,EAAEd,CAAC,CAACe,IAAhB;AAAA,mBACGF,IADH,qBACU;AAAM,UAAA,SAAS,EAAEb,CAAC,CAACgB,IAAnB;AAAA,oBAA0BJ;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADV;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AACE,QAAA,SAAS,EAAEZ,CAAC,CAACiB,GADf;AAEE,QAAA,OAAO,EAAEZ,QAAQ,CAACH,aAAa,CAACS,EAAD,CAAd,CAFnB;AAGE,QAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAsCA,EAAtC;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAzBD;;GAAMP,Q;UAGaD,W,EACAF,W;;;KAJbG,Q;AA2BNA,QAAQ,CAACc,SAAT,GAAqB;AACnBC,EAAAA,eAAe,EAAEpB,SAAS,CAACqB,IAAV,CAAeC,UADb;AAEnBC,EAAAA,IAAI,EAAEvB,SAAS,CAACwB,OAAV,CAAkBxB,SAAS,CAACyB,QAAV,CAAmBzB,SAAS,CAAC0B,MAAV,CAAiBJ,UAApC,CAAlB;AAFa,CAArB;AAKA,eAAejB,QAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.scss\";\nimport { useSelector } from \"react-redux\";\nimport { deleteContact } from \"../../redux/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst Contacts = () => {\n  // if (list.length === 0) return null;\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  // const filter = useSelector(state => state.contacts.filter);\n  return (\n    <ul className={s.filterList}>\n      {contacts.map(({ id, number, name }) => (\n        <li className={s.filterListItem} key={id}>\n          <p className={s.text}>\n            {name}: <span className={s.span}>{number}</span>\n          </p>\n\n          <button\n            className={s.btn}\n            onClick={dispatch(deleteContact(id))}\n            type=\"button\"\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContacts.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}