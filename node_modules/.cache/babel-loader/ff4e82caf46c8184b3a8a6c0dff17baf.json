{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport s from './ContactForm.module.scss';\nexport default ContactForm = _s(({\n  handleSubmitForm\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const value = e.currentTarget.name;\n\n    switch (value) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n\n      default:\n        throw new Error();\n    }\n  };\n\n  return;\n}, \"mgYk2feJE7Nd8w88JvjzPww6GtA=\"); // class ContactForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n//   handleChange = e => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({ [name]: value });\n//   };\n//   onSubmitForm = e => {\n//     e.preventDefault();\n//     console.log(this.state);\n//     this.props.handleSubmitForm(this.state);\n//     this.reset();\n//   };\n//   reset = () => {\n//     this.setState({ name: '', number: '' });\n//   };\n//   render() {\n//     const { name, number } = this.state;\n//     return (\n//       <form className={s.form} onSubmit={this.onSubmitForm}>\n//         <label>\n//           Name\n//           <input\n//             className={s.form__input}\n//             onChange={this.handleChange}\n//             value={name}\n//             type=\"text\"\n//             name=\"name\"\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//             required\n//             placeholder=\"Ivan Ivanov\"\n//           />\n//         </label>\n//         <label>\n//           Number\n//           <input\n//             className={s.form__input}\n//             onChange={this.handleChange}\n//             value={number}\n//             type=\"tel\"\n//             name=\"number\"\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//             required\n//             placeholder=\"+38 (099) 999-99-99\"\n//           />\n//         </label>\n//         <button className={s.btn}>add contact</button>\n//       </form>\n//     );\n//   }\n// }\n// ContactForm.propTypes = {\n//   handleSubmitForm: PropTypes.func.isRequired,\n// };\n// export default ContactForm;","map":{"version":3,"sources":["/Users/alena/Documents/GitHub/goit-react-hw-04-hooks-phonebook/src/components/ContactForm/ContactForm.js"],"names":["PropTypes","Component","s","ContactForm","handleSubmitForm","name","setName","useState","number","setNumber","handleChange","e","value","currentTarget","Error"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,CAAP,MAAc,2BAAd;AAEA,eAAeC,WAAW,MAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AAAA;;AACrD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBF,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAMC,KAAK,GAAGD,CAAC,CAACE,aAAF,CAAgBR,IAA9B;;AACA,YAAQO,KAAR;AACE,WAAK,MAAL;AACEN,QAAAA,OAAO,CAACK,CAAC,CAACE,aAAF,CAAgBD,KAAjB,CAAP;AACA;;AAEF,WAAK,QAAL;AACEH,QAAAA,SAAS,CAACE,CAAC,CAACE,aAAF,CAAgBD,KAAjB,CAAT;AACA;;AAEF;AACE,cAAM,IAAIE,KAAJ,EAAN;AAVJ;AAYD,GAdD;;AAeA;AACD,CApByB,iCAA1B,C,CAsBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport s from './ContactForm.module.scss';\n\nexport default ContactForm = ({ handleSubmitForm }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const value = e.currentTarget.name;\n    switch (value) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n\n      default:\n        throw new Error();\n    }\n  };\n  return;\n};\n\n// class ContactForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   handleChange = e => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({ [name]: value });\n//   };\n//   onSubmitForm = e => {\n//     e.preventDefault();\n//     console.log(this.state);\n//     this.props.handleSubmitForm(this.state);\n//     this.reset();\n//   };\n//   reset = () => {\n//     this.setState({ name: '', number: '' });\n//   };\n\n//   render() {\n//     const { name, number } = this.state;\n//     return (\n//       <form className={s.form} onSubmit={this.onSubmitForm}>\n//         <label>\n//           Name\n//           <input\n//             className={s.form__input}\n//             onChange={this.handleChange}\n//             value={name}\n//             type=\"text\"\n//             name=\"name\"\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//             required\n//             placeholder=\"Ivan Ivanov\"\n//           />\n//         </label>\n//         <label>\n//           Number\n//           <input\n//             className={s.form__input}\n//             onChange={this.handleChange}\n//             value={number}\n//             type=\"tel\"\n//             name=\"number\"\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//             required\n//             placeholder=\"+38 (099) 999-99-99\"\n//           />\n//         </label>\n//         <button className={s.btn}>add contact</button>\n//       </form>\n//     );\n//   }\n// }\n\n// ContactForm.propTypes = {\n//   handleSubmitForm: PropTypes.func.isRequired,\n// };\n\n// export default ContactForm;\n"]},"metadata":{},"sourceType":"module"}