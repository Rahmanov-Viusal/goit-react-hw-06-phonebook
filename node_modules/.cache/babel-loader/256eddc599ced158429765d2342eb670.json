{"ast":null,"code":"var _jsxFileName = \"/Users/alena/Documents/GitHub/goit-react-hw-04-hooks-phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContatctList';\nimport FilterContact from './components/FilterContact';\nimport Section from './components/Section';\nimport Container from './components/Container';\nimport shortid from 'shortid';\nimport 'modern-normalize/modern-normalize.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [filter, setFilter] = useState('');\n  const [contacts, setContacts] = useState([]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      title: \"Phonebook\",\n      children: /*#__PURE__*/_jsxDEV(ContactForm, {\n        handleSubmitForm: this.handleSubmitForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Contacts\",\n      children: [/*#__PURE__*/_jsxDEV(FilterContact, {\n        value: this.takeCurrentValue,\n        filter: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        onDeleteContact: this.onDeleteContact,\n        list: filtered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n} // class App extends Component {\n//   state = {\n//     filter: '',\n//     contacts: [],\n//   };\n//   componentDidMount() {\n//     const contact = localStorage.getItem('contact');\n//     const parseContact = JSON.parse(contact);\n//     if (parseContact) {\n//       this.setState({ contacts: parseContact });\n//     }\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     const { contacts } = this.state;\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contact', JSON.stringify(contacts));\n//     }\n//   }\n//   takeCurrentValue = e => {\n//     const { value } = e.currentTarget;\n//     this.setState({ filter: value });\n//   };\n//   getFilterContact = () => {\n//     const { contacts, filter } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter(({ name }) =>\n//       name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n//   handleSubmitForm = ({ name, number }) => {\n//     const contact = {\n//       id: shortid.generate(),\n//       name,\n//       number,\n//     };\n//     if (this.state.contacts.find(({ name }) => name === contact.name)) {\n//       alert(`${contact.name} is already in contacts`);\n//       return;\n//     }\n//     this.setState(({ contacts }) => ({ contacts: [...contacts, contact] }));\n//   };\n//   onDeleteContact = contactId => {\n//     this.setState(({ contacts }) => ({\n//       contacts: contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n//   render() {\n//     const { filter } = this.state;\n//     const filtered = this.getFilterContact();\n//     return (\n//       <Container className=\"App\">\n//         <Section title=\"Phonebook\">\n//           <ContactForm handleSubmitForm={this.handleSubmitForm} />\n//         </Section>\n//         <Section title=\"Contacts\">\n//           <FilterContact value={this.takeCurrentValue} filter={filter} />\n//           <ContactList onDeleteContact={this.onDeleteContact} list={filtered} />\n//         </Section>\n//       </Container>\n//     );\n//   }\n// }\n// export default App;\n\n_s(App, \"07Ad9jo3GrVr4yhbv4UJbw4o2L4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alena/Documents/GitHub/goit-react-hw-04-hooks-phonebook/src/App.js"],"names":["useState","ContactForm","ContactList","FilterContact","Section","Container","shortid","App","filter","setFilter","contacts","setContacts","handleSubmitForm","takeCurrentValue","onDeleteContact","filtered"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAO,uCAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,gBAAgB,EAAE,KAAKY;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,UAAf;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAE,KAAKC,gBAA3B;AAA6C,QAAA,MAAM,EAAEL;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,eAAe,EAAE,KAAKM,eAAnC;AAAoD,QAAA,IAAI,EAAEC;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;GApFwBR,G;;KAAAA,G","sourcesContent":["import { useState } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContatctList';\nimport FilterContact from './components/FilterContact';\nimport Section from './components/Section';\nimport Container from './components/Container';\nimport shortid from 'shortid';\nimport 'modern-normalize/modern-normalize.css';\n\nexport default function App() {\n  const [filter, setFilter] = useState('');\n  const [contacts, setContacts] = useState([]);\n\n  return (\n    <Container className=\"App\">\n      <Section title=\"Phonebook\">\n        <ContactForm handleSubmitForm={this.handleSubmitForm} />\n      </Section>\n      <Section title=\"Contacts\">\n        <FilterContact value={this.takeCurrentValue} filter={filter} />\n        <ContactList onDeleteContact={this.onDeleteContact} list={filtered} />\n      </Section>\n    </Container>\n  );\n}\n\n// class App extends Component {\n//   state = {\n//     filter: '',\n//     contacts: [],\n//   };\n//   componentDidMount() {\n//     const contact = localStorage.getItem('contact');\n//     const parseContact = JSON.parse(contact);\n//     if (parseContact) {\n//       this.setState({ contacts: parseContact });\n//     }\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     const { contacts } = this.state;\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contact', JSON.stringify(contacts));\n//     }\n//   }\n//   takeCurrentValue = e => {\n//     const { value } = e.currentTarget;\n//     this.setState({ filter: value });\n//   };\n//   getFilterContact = () => {\n//     const { contacts, filter } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter(({ name }) =>\n//       name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n//   handleSubmitForm = ({ name, number }) => {\n//     const contact = {\n//       id: shortid.generate(),\n//       name,\n//       number,\n//     };\n\n//     if (this.state.contacts.find(({ name }) => name === contact.name)) {\n//       alert(`${contact.name} is already in contacts`);\n//       return;\n//     }\n//     this.setState(({ contacts }) => ({ contacts: [...contacts, contact] }));\n//   };\n\n//   onDeleteContact = contactId => {\n//     this.setState(({ contacts }) => ({\n//       contacts: contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n\n//   render() {\n//     const { filter } = this.state;\n//     const filtered = this.getFilterContact();\n\n//     return (\n//       <Container className=\"App\">\n//         <Section title=\"Phonebook\">\n//           <ContactForm handleSubmitForm={this.handleSubmitForm} />\n//         </Section>\n//         <Section title=\"Contacts\">\n//           <FilterContact value={this.takeCurrentValue} filter={filter} />\n//           <ContactList onDeleteContact={this.onDeleteContact} list={filtered} />\n//         </Section>\n//       </Container>\n//     );\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}