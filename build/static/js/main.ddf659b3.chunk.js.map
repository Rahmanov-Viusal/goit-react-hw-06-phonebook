{"version":3,"sources":["components/Container/Container.module.scss","components/ContactForm/ContactForm.js","components/ContatctList/ContactList.js","components/FilterContact/FilterContact.js","components/Section/Section.js","components/Container/Container.js","App.js","hooks/useLocalStorage.js","index.js","components/ContatctList/ContactList.module.scss","components/ContactForm/ContactForm.module.scss","components/FilterContact/FilterContact.module.scss"],"names":["module","exports","ContactForm","handleSubmitForm","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","Error","reset","className","s","form","onSubmit","preventDefault","form__input","onChange","type","pattern","title","required","placeholder","btn","Contacts","onDeleteContact","list","length","filterList","map","id","filterListItem","text","span","onClick","FilterContact","filter","label","filterInput","Section","children","Container","container","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setstate","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","setFilter","contact","shortid","generate","find","alert","prev","ContactList","contactId","normalizedFilter","toLowerCase","includes","getFilterContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddf659b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3eZVY\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport s from './ContactForm.module.scss';\n\nfunction ContactForm({ handleSubmitForm }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const value = e.currentTarget.name;\n    switch (value) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n\n      default:\n        throw new Error();\n    }\n  };\n  const onSubmitForm = e => {\n    e.preventDefault();\n    handleSubmitForm(name, number);\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={s.form} onSubmit={onSubmitForm}>\n      <label>\n        Name\n        <input\n          className={s.form__input}\n          onChange={handleChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Ivan Ivanov\"\n        />\n      </label>\n      <label>\n        Number\n        <input\n          className={s.form__input}\n          onChange={handleChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"+38 (099) 999-99-99\"\n        />\n      </label>\n      <button className={s.btn}>add contact</button>\n    </form>\n  );\n}\nContactForm.propTypes = {\n  handleSubmitForm: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.scss';\n\nconst Contacts = ({ onDeleteContact, list }) => {\n  if (list.length === 0) return null;\n  return (\n    <ul className={s.filterList}>\n      {list.map(({ id, number, name }) => (\n        <li className={s.filterListItem} key={id}>\n          <p className={s.text}>\n            {name}: <span className={s.span}>{number}</span>\n          </p>\n\n          <button\n            className={s.btn}\n            onClick={() => onDeleteContact(id)}\n            type=\"button\"\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContacts.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\n};\n\nexport default Contacts;\n","import PropTypes from 'prop-types';\nimport s from './FilterContact.module.scss';\n\nconst FilterContact = ({ value, filter }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input className={s.filterInput} onChange={value} value={filter} />\n    </label>\n  );\n};\n\nFilterContact.propTypes = {\n  value: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default FilterContact;\n","const Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import s from './Container.module.scss';\nimport React from 'react';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import React, { useState } from 'react';\nimport { useLocalStorage } from './hooks/useLocalStorage';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContatctList';\nimport FilterContact from './components/FilterContact';\nimport Section from './components/Section';\nimport Container from './components/Container';\nimport shortid from 'shortid';\nimport 'modern-normalize/modern-normalize.css';\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  const [filter, setFilter] = useState('');\n\n  const takeCurrentValue = e => {\n    const { value } = e.currentTarget;\n    setFilter(value);\n  };\n  const getFilterContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const handleSubmitForm = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (contacts.find(({ name }) => name === contact.name)) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n    setContacts(prev => [...prev, contact]);\n  };\n\n  const onDeleteContact = contactId => {\n    setContacts(prev => prev.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <Container className=\"App\">\n      <Section title=\"Phonebook\">\n        <ContactForm handleSubmitForm={handleSubmitForm} />\n      </Section>\n      <Section title=\"Contacts\">\n        <FilterContact value={takeCurrentValue} filter={filter} />\n        <ContactList\n          onDeleteContact={onDeleteContact}\n          list={getFilterContact()}\n        />\n      </Section>\n    </Container>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setstate] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setstate];\n};\n\nexport { useLocalStorage };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterList\":\"ContactList_filterList__2W0lZ\",\"filterListItem\":\"ContactList_filterListItem__sC2He\",\"text\":\"ContactList_text__jjXKS\",\"span\":\"ContactList_span__aTr9k\",\"btn\":\"ContactList_btn__fOxpU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"form__input\":\"ContactForm_form__input__3YBE6\",\"btn\":\"ContactForm_btn__1BmbG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContact_label__37W93\",\"filterInput\":\"FilterContact_filterInput__M9FQ8\"};"],"sourceRoot":""}